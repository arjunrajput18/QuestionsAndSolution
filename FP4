// # Functional Programming Set 4

// **Instructions:** 
// 1. Make use of **.reduce()** method in this set. 
// 2. You can make use of basic methods such as .length, toLowerCase(), toUpperCase() if needed. 
// 3. Do NOT use for-loops.

// 1. Given an array, write an ES6 function that returns the total length of all the strings in an array.
    
    
//     const strings = ["apple", "banana", "cherry", "date", "blueberry"];
//     // Your code here
//     const totalLength=strings=>strings.reduce((acc,curr)=>acc+curr.length, 0)
    
//     console.log(totalLength(strings));
//     // Output: 30
    
    
// 2. Write an ES6 function sumSquares that takes an array of numbers and returns the sum of the squares of all the numbers in the array
    
    
//     const numbers = [1, 2, 3, 4, 5];
//     // Your code here
    
//     const sumSquares=numbers=>numbers.reduce((acc,curr)=>acc+curr*curr,0)
    
//     console.log(sumSquares(numbers));
//      // Output: 55 
    
    
// 3. Write an ES6 function that calculates and returns the total value of all items in an array of objects.
    
    
//     const items = [
//       { name: "Item 1", price: 10 },
//       { name: "Item 2", price: 20 },
//       { name: "Item 3", price: 30 }
//     ];
//     // Your code here
    
//     const totalValue=items=>items.reduce((acc,curr)=>acc+curr.price,0)
    
//     console.log(totalValue(items)); 
//     // Output: 60
    
    
// 4. Write an ES6 function that takes an array of strings as input and concatenates them into a single string.
    
    
//     // Your code here
    
//     const concatStrings=arr=>arr.reduce((acc,curr)=>acc+curr)
    
//     console.log(concatStrings(['this', 'is', 'fun'])); // Output: 'thisisfun'
    
    
// 5. Write an ES6 function to multiply and return all the elements of a given array.
    
    
//     const numbers = [1, 2, 3, 4, 5];
//     // Your code here
    
//     const product=numbers=>numbers.reduce((acc,curr)=>acc*curr)
    
//     console.log(product(numbers));
//     // Output: 120
    
    
// 6. Write an ES6 function that takes an array of strings and returns the longest string.
    
    
//     const strings = ["neogcamp", "Haule Haule", "code", "Batman", "Awesome"];
//     // Your code here
//     const longestString=strings=>strings.reduce((acc,curr)=>acc.length<curr.length?acc=curr:acc,strings[0])
    
//     console.log(longestString(strings)); 
//     // Output: 'Haule Haule'
    
    
// 7. Write an ES6 function that takes an array of objects with name and age property, and returns the name of the oldest person.
    
    
//     const people = [
//     			{name: 'Jeena', age: 25}, 
//     			{name: 'Priya', age: 30}, 
//     			{name: 'Naina', age: 45}
//     ]
//     // Your code here
    
//     const oldestPersonName=people=>
//     people.reduce((acc,curr)=>acc.age<curr.age?acc=curr:acc).name
//     --------------------------------------
//     const oldestPersonName=people=>{
//         let max=0
//         let nameMaxAge;
//         for(i=0;i<people.length;i++){
//         if(people[i].age>max){
//             max=people[i].age
//             nameMaxAge=people[i].name
//         }
//         }
//     return nameMaxAge
//     }
//     console.log(oldestPersonName(people)); 
//     // Output: 'Naina'
    
    
// 8. Write an ES6 function that takes an array of objects representing people with properties name and age, and returns an object with the average age of all the people.
    
    
//     const people = [
//       { name: 'Alice', age: 25 },
//       { name: 'Bob', age: 30 },
//       { name: 'Charlie', age: 35 },
//       { name: 'David', age: 40 }
//     ];
//     // Your code here
//     const getAverageAge=people=>{
//     let store=0
//     len=people.length
//         for(i=0;i<len;i++){
//            store+=people[i].age 
//         }
//     return {averageAge:store/len}
//     }
//     -------------------------
//     const getAverageAge = people => {
//       const sum = people.reduce((acc, person) => {
//         return acc + person.age;
//       }, 0);
//       const averageAge = sum / people.length;
//       return { averageAge };
//     };
    
//     ------------------
//     const getAverageAge=people=>({averageAge:people.reduce((acc,curr)=>acc+curr.age,0)/people.length})
    
//     console.log(getAverageAge(people));
//     // Output: { averageAge: 32.5 }
    
    
// 9. Write an ES6 function that takes an array of objects representing products with properties name, price, and quantity, and returns an object with the most expensive product.
    
    
//     const products = [
//       { name: "Bread", price: 10, quantity: 2 },
//       { name: "Clips", price: 20, quantity: 5 },
//       { name: "Knife", price: 30, quantity: 1 },
//       { name: "Slipper", price: 40, quantity: 3 }
//     ];
//     // Your code here
    
//     const findMostExpensiveProduct=(products)=>products.reduce((acc,curr)=>acc.price*acc.quantity<curr.price*curr.quantity?acc=curr:acc)
    
//     console.log(findMostExpensiveProduct(products)); 
//     // { name: "Slipper", price: 40, quantity: 3 }
    
    
// 10. Write an ES6 function that takes an array of strings and returns an object with the count of each string.
    
    
//     const fruits = ['apple', 'banana', 'banana', 'cherry', 'apple', 'apple', 'banana'];
//     // Your code here
    
//     function countStrings(strings) {
//     const frequency ={};
//     for(i=0;i<strings.length;i++){
//      if(frequency[strings[i]]){       
//      frequency[strings[i]]++           
//       }
//     else{                  
//      frequency[strings[i]]=1 
//     }
//     }    
//     return frequency
//     }
    
//     ----------------------------------------------
    
//     const countStrings = arrFruits => arrFruits.reduce((acc, cur) => {
//       acc[cur] = (acc[cur] || 0) + 1;
//        return acc
//     }, {})
//     console.log(countStrings(fruits));
//     // Output: { 'apple': 3, 'banana': 3, 'cherry': 1 }
    